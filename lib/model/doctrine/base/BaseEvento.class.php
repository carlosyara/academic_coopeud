<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Evento', 'doctrine');

/**
 * BaseEvento
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $nombre
 * @property integer $valor_total
 * @property integer $proveedor_id
 * @property integer $tipo-evento_id
 * @property integer $estado
 * @property integer $con_copago
 * @property integer $numero_asistentes
 * @property integer $cupo_disponible
 * @property integer $subisidio_copago
 * @property string $lugar
 * @property date $fecha_inicio
 * @property date $fecha_fin
 * @property date $fecha_max_inscripcion
 * @property date $fecha_max_cancelacion
 * @property string $observaciones
 * @property Proveedor $Proveedor
 * @property TipoEvento $TipoEvento
 * @property Doctrine_Collection $EventoCierre
 * @property Doctrine_Collection $Inscripcion
 * @property Doctrine_Collection $PagoProveedor
 * 
 * @method integer             getId()                    Returns the current record's "id" value
 * @method string              getNombre()                Returns the current record's "nombre" value
 * @method integer             getValorTotal()            Returns the current record's "valor_total" value
 * @method integer             getProveedorId()           Returns the current record's "proveedor_id" value
 * @method integer             getTipo()                  Returns the current record's "tipo" value
 * @method integer             getEstado()                Returns the current record's "estado" value
 * @method integer             getConCopago()             Returns the current record's "con_copago" value
 * @method integer             getNumeroAsistentes()      Returns the current record's "numero_asistentes" value
 * @method integer             getCupoDisponible()        Returns the current record's "cupo_disponible" value
 * @method integer             getSubisidioCopago()       Returns the current record's "subisidio_copago" value
 * @method string              getLugar()                 Returns the current record's "lugar" value
 * @method date                getFechaInicio()           Returns the current record's "fecha_inicio" value
 * @method date                getFechaFin()              Returns the current record's "fecha_fin" value
 * @method date                getFechaMaxInscripcion()   Returns the current record's "fecha_max_inscripcion" value
 * @method date                getFechaMaxCancelacion()   Returns the current record's "fecha_max_cancelacion" value
 * @method string              getObservaciones()         Returns the current record's "observaciones" value
 * @method Proveedor           getProveedor()             Returns the current record's "Proveedor" value
 * @method TipoEvento          getTipoEvento()            Returns the current record's "TipoEvento" value
 * @method Doctrine_Collection getEventoCierre()          Returns the current record's "EventoCierre" collection
 * @method Doctrine_Collection getInscripcion()           Returns the current record's "Inscripcion" collection
 * @method Doctrine_Collection getPagoProveedor()         Returns the current record's "PagoProveedor" collection
 * @method Evento              setId()                    Sets the current record's "id" value
 * @method Evento              setNombre()                Sets the current record's "nombre" value
 * @method Evento              setValorTotal()            Sets the current record's "valor_total" value
 * @method Evento              setProveedorId()           Sets the current record's "proveedor_id" value
 * @method Evento              setTipo()                  Sets the current record's "tipo" value
 * @method Evento              setEstado()                Sets the current record's "estado" value
 * @method Evento              setConCopago()             Sets the current record's "con_copago" value
 * @method Evento              setNumeroAsistentes()      Sets the current record's "numero_asistentes" value
 * @method Evento              setCupoDisponible()        Sets the current record's "cupo_disponible" value
 * @method Evento              setSubisidioCopago()       Sets the current record's "subisidio_copago" value
 * @method Evento              setLugar()                 Sets the current record's "lugar" value
 * @method Evento              setFechaInicio()           Sets the current record's "fecha_inicio" value
 * @method Evento              setFechaFin()              Sets the current record's "fecha_fin" value
 * @method Evento              setFechaMaxInscripcion()   Sets the current record's "fecha_max_inscripcion" value
 * @method Evento              setFechaMaxCancelacion()   Sets the current record's "fecha_max_cancelacion" value
 * @method Evento              setObservaciones()         Sets the current record's "observaciones" value
 * @method Evento              setProveedor()             Sets the current record's "Proveedor" value
 * @method Evento              setTipoEvento()            Sets the current record's "TipoEvento" value
 * @method Evento              setEventoCierre()          Sets the current record's "EventoCierre" collection
 * @method Evento              setInscripcion()           Sets the current record's "Inscripcion" collection
 * @method Evento              setPagoProveedor()         Sets the current record's "PagoProveedor" collection
 * 
 * @package    coopeud
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseEvento extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('evento');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('nombre', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('valor_total', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('proveedor_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('tipo-evento_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('estado', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('con_copago', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('numero_asistentes', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('cupo_disponible', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('subisidio_copago', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('lugar', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('fecha_inicio', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('fecha_fin', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('fecha_max_inscripcion', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('fecha_max_cancelacion', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('observaciones', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Proveedor', array(
             'local' => 'proveedor_id',
             'foreign' => 'id'));

        $this->hasOne('TipoEvento', array(
             'local' => 'tipo-evento_id',
             'foreign' => 'id'));

        $this->hasMany('EventoCierre', array(
             'local' => 'id',
             'foreign' => 'evento_id'));

        $this->hasMany('Inscripcion', array(
             'local' => 'id',
             'foreign' => 'evento_id'));

        $this->hasMany('PagoProveedor', array(
             'local' => 'id',
             'foreign' => 'evento_id'));
    }
}
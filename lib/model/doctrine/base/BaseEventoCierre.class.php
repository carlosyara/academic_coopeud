<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('EventoCierre', 'doctrine');

/**
 * BaseEventoCierre
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $evento_id
 * @property integer $total_recaudo
 * @property integer $diferencia
 * @property integer $total_asistentes
 * @property Evento $Evento
 * 
 * @method integer      getId()               Returns the current record's "id" value
 * @method integer      getEventoId()         Returns the current record's "evento_id" value
 * @method integer      getTotalRecaudo()     Returns the current record's "total_recaudo" value
 * @method integer      getDiferencia()       Returns the current record's "diferencia" value
 * @method integer      getTotalAsistentes()  Returns the current record's "total_asistentes" value
 * @method Evento       getEvento()           Returns the current record's "Evento" value
 * @method EventoCierre setId()               Sets the current record's "id" value
 * @method EventoCierre setEventoId()         Sets the current record's "evento_id" value
 * @method EventoCierre setTotalRecaudo()     Sets the current record's "total_recaudo" value
 * @method EventoCierre setDiferencia()       Sets the current record's "diferencia" value
 * @method EventoCierre setTotalAsistentes()  Sets the current record's "total_asistentes" value
 * @method EventoCierre setEvento()           Sets the current record's "Evento" value
 * 
 * @package    coopeud
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseEventoCierre extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('evento_cierre');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('evento_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('total_recaudo', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('diferencia', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('total_asistentes', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Evento', array(
             'local' => 'evento_id',
             'foreign' => 'id'));
    }
}
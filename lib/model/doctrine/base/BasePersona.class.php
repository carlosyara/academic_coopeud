<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Persona', 'doctrine');

/**
 * BasePersona
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $documento
 * @property string $nombre
 * @property string $apellido
 * @property date $fecha_nacimiento
 * @property Doctrine_Collection $Afiliado
 * @property Doctrine_Collection $Funcionario
 * @property Doctrine_Collection $Usuario
 * 
 * @method integer             getId()               Returns the current record's "id" value
 * @method integer             getDocumento()        Returns the current record's "documento" value
 * @method string              getNombre()           Returns the current record's "nombre" value
 * @method string              getApellido()         Returns the current record's "apellido" value
 * @method date                getFechaNacimiento()  Returns the current record's "fecha_nacimiento" value
 * @method Doctrine_Collection getAfiliado()         Returns the current record's "Afiliado" collection
 * @method Doctrine_Collection getFuncionario()      Returns the current record's "Funcionario" collection
 * @method Doctrine_Collection getUsuario()          Returns the current record's "Usuario" collection
 * @method Persona             setId()               Sets the current record's "id" value
 * @method Persona             setDocumento()        Sets the current record's "documento" value
 * @method Persona             setNombre()           Sets the current record's "nombre" value
 * @method Persona             setApellido()         Sets the current record's "apellido" value
 * @method Persona             setFechaNacimiento()  Sets the current record's "fecha_nacimiento" value
 * @method Persona             setAfiliado()         Sets the current record's "Afiliado" collection
 * @method Persona             setFuncionario()      Sets the current record's "Funcionario" collection
 * @method Persona             setUsuario()          Sets the current record's "Usuario" collection
 * 
 * @package    coopeud
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePersona extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('persona');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('documento', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('nombre', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 50,
             ));
        $this->hasColumn('apellido', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('fecha_nacimiento', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Afiliado', array(
             'local' => 'id',
             'foreign' => 'persona_id'));

        $this->hasMany('Funcionario', array(
             'local' => 'id',
             'foreign' => 'persona_id'));

        $this->hasMany('Usuario', array(
             'local' => 'id',
             'foreign' => 'persona_id'));
    }
}